
/* CSS RESET */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* padding-top을 이용하여 글자를 */
/* 아래로 내리는 방법 */
/* 단점: 박스의 높이가 변하거나 글줄개수가 늘어나면 패딩값을 바꿔야함 */

/* #box1 {
    width: 200px; height: 100px;
    background-color: yellow;
    text-align: center;
    padding-top: 40px;
} */

/* 글줄이 여러줄이어도 가능 */
/* 정확히 정중앙 위치 가능*/
/* 단점: 박스의 높이를 콕찝어 얼마라고 정의 하지 못함*/

/* #box1 {
    width: 200px;
    background-color: yellow;
    padding: 40px 0;
    text-align: center;
} */

/* line-height를 이용하는 방법*/
/* 장점 : 박스의 높이를 이야기할수 있음, 정확히 정중앙에 위치 , 
박스의 높이가 달려져도 쉽게 수정*/
/* 단점 : 한줄만 가능 */
/* line-height는 높이값과 동일하게*/

/* #box1 {
    width: 200px;
    height: 100px;
    background-color: yellow;
    text-align: center;
    line-height: 100px;
} */


/* 사람들이 많이 오해하는것*/
/* 적용 안됌 vertical-align(인라인용) */

/* #box1 {
    width: 200px;
    height: 100px;
    background-color: yellow;
    text-align: center;
    vertical-align: middle;
} */


/* .small {
    font-size: 0.5em;
    vertical-align: 0.8em;
}
.big {
    font-size: 2em;
} */

/* 두줄 이상 글도 쓰고 */
/* 박스의 높이도 특정하*/
/* 정확히 정중에도 놓고*/

#box1 {
    width: 200px;
    height: 100px;

    
    background-color: yellow;
    position: relative;
}
#box1 span {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
}

#box3 {
    width: 600px;
    height: 400px;
    background-color: yellow;
    margin-left: 100px;
    margin-top: 50px;
    position: relative;
}

#box2 {
    width: 300px;
    height: 200px;
    background-color: beige;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%);
    
}